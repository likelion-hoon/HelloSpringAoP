<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">



	<!-- 컨테이너에게 객체 생성을 맡긴다. -->
	<bean id="logAspect" class="com.sk.test.LogAspect" />
	<!-- LogAspect logAspect = new LogAspect(); -->
	<bean id="svr" class="com.sk.test.Message" />
	<!-- Message message = new Message(); -->

	<aop:config>
		<aop:aspect id="logAOP" ref="logAspect">

			<aop:pointcut id="publicMethod3"
				expression="execution(public * com.sk.test..dummy*(..))" />
			<aop:around pointcut-ref="publicMethod3" method="logDummy" />

			<aop:pointcut id="publicMethod"
				expression="execution(public * com.sk.test..test*(..))" />
			<aop:around pointcut-ref="publicMethod" method="logOnly" />

			<aop:pointcut id="publicMethod2"
				expression="execution(public * com.sk.test..get*(..))" />
			<aop:around pointcut-ref="publicMethod2" method="log" />

			<aop:pointcut id="publicMethod4"
				expression="execution(public * com.sk.test..debug*(..))" />
			<aop:around pointcut-ref="publicMethod3" method="logDebug" />
			
			<aop:pointcut id="beforeMethod"
				expression="execution(public * com.sk.test..before*(..))" />
			<aop:before pointcut-ref="beforeMethod" method="logBefore" />
			
		</aop:aspect>
	</aop:config>
</beans>

